
private const selector Sfrom = @e[tag=mcppc__from, limit=1];
private const selector Sto = @e[tag=mcppc__to, limit=1];


private Vec3d posfrom -> Sfrom.Pos;
private Vec3d posto -> Sto.Pos;
private Vec3d diff;

public<num n = 2,num m=3 .. 5> double<n> dbl(double<m> in) {
	private const num en = 3;
	stopLongMult();
	return = (double<n>)in*(en);
	}
public<num n = 1 .. 6> Vec3d<n> lookAtEven(int powhf) {
	//even power of lookvec
	private double<n> scale;
	private int counter;
	diff = (Vec3d<n>)posto- (Vec3d<n>)posfrom;//TODO execute as statements
	return = diff;
}
public Vec3d lookAtOdd(int powhff) {
	//even power of lookvec
	private double scale;
	private int counter;
	diff = posto-posfrom;
	scale = diff*diff;
	counter=0;
	while(counter<powhff){
		diff = diff * scale;
		counter=counter+1;
	}
	return=diff;
}

private int dbled = 2;
dbled = dbl<3,3> (dbled);
